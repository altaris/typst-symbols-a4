#set table(stroke: 0.1pt)

#let t2l(typst, latex, latexpkg: "") = {
  (
    [#eval(typst, mode: "math")],
    [#text(typst, font: "Fira Code")],
    [#text([\\#latex], font: "Fira Code")],
    [#text(latexpkg, font: "Fira Code")],
  )
}

#table(
  columns: 4,
  table.header([Symbol], [Typst], [LaTeX], [LaTeX pkg]),
  ..t2l("paren.l", "lparen"),
  ..t2l("paren.r", "rparen"),
  ..t2l("paren.t", "overparen"),
  ..t2l("paren.b", "underparen"),
  ..t2l("brace.l", "lbrace"),
  ..t2l("brace.r", "rbrace"),
  ..t2l("brace.t", "overbrace"),
  ..t2l("brace.b", "underbrace"),
  ..t2l("bracket.l", "lbrack"),
  ..t2l("bracket.l.double", "lBrack"),
  ..t2l("bracket.r", "rbrack"),
  ..t2l("bracket.r.double", "rBrack"),
  ..t2l("bracket.t", "overbracket"),
  ..t2l("bracket.b", "underbracket"),
  ..t2l("turtle.l", ""),
  ..t2l("turtle.r", ""),
  ..t2l("turtle.t", "obrbrak"),
  ..t2l("turtle.b", "ubrbrak"),
  ..t2l("bar.v", "vert"),
  ..t2l("bar.v.double", "Vert"),
  ..t2l("bar.v.triple", "Vvert"),
  ..t2l("bar.v.broken", "textbrokenbar", latexpkg: "textcomp"),
  ..t2l("bar.v.circle", "circledvert"),
  ..t2l("bar.h", "horizbar"),
  ..t2l("fence.l", "lvzigzag"),
  ..t2l("fence.l.double", "Lvzigzag"),
  ..t2l("fence.r", "rvzigzag"),
  ..t2l("fence.r.double", "Rvzigzag"),
  ..t2l("fence.dotted", "fourvdots"),
  ..t2l("angle", "angle"),
  ..t2l("angle.l", "langle"),
  ..t2l("angle.r", "rangle"),
  ..t2l("angle.l.double", "llangle", latexpkg: "MnSymnol"),
  ..t2l("angle.r.double", "rrangle", latexpkg: "MnSymnol"),
  ..t2l("angle.acute", "angdnr"),
  ..t2l("angle.arc", "measuredangle"),
  ..t2l("angle.arc.rev", "measuredangleleft"),
  ..t2l("angle.rev", "revangle"),
  ..t2l("angle.right", "rightangle"),
  ..t2l("angle.right.rev", ""),
  ..t2l("angle.right.arc", "measuredrightangle"),
  ..t2l("angle.right.dot", "rightanglemdot"),
  ..t2l("angle.right.sq", "rightanglesqr"),
  ..t2l("angle.spatial", "threedangle"),
  ..t2l("angle.spheric", "sphericalangle"),
  ..t2l("angle.spheric.rev", "gtlpar"),
  ..t2l("angle.spheric.top", "sphericalangleup"),
  ..t2l("amp", "mathampersand"),
  ..t2l("amp.inv", "upand"),
  ..t2l("ast.op", "ast"),
  ..t2l("ast.basic", ""),
  ..t2l("ast.low", ""),
  ..t2l("ast.double", ""),
  ..t2l("ast.triple", ""),
  ..t2l("ast.small", ""),
  ..t2l("ast.circle", "circledast"),
  ..t2l("ast.square", "boxast"),
  ..t2l("at", "mathatsign"),
  ..t2l("backslash", "backslash"),
  ..t2l("backslash.circle", "obslash"),
  ..t2l("backslash.not", "rsolbar"),
  ..t2l("co", ""),
  ..t2l("colon", "mathcolon"),
  ..t2l("colon.double", "Colon"),
  ..t2l("colon.eq", "coloneq"),
  ..t2l("colon.double.eq", "Coloneq"),
  ..t2l("comma", "mathcomma"),
  ..t2l("dagger", "dagger"),
  ..t2l("dagger.double", "ddagger"),
  ..t2l("dash.en", ""),
  ..t2l("dash.em", ""),
  ..t2l("dash.fig", ""),
  ..t2l("dash.wave", ""),
  ..t2l("dash.colon", "dashcolon"),
  ..t2l("dash.circle", "circleddash"),
  ..t2l("dash.wave.double", "hzigzag"),
  ..t2l("dot.op", "cdot"),
  ..t2l("dot.basic", "mathperiod"),
  ..t2l("dot.c", "cdotp"),
  ..t2l("dot.circle", "odot"),
  ..t2l("dot.circle.big", "bigodot"),
  ..t2l("dot.square", "boxdot"),
  ..t2l("dot.double", ""),
  ..t2l("dot.triple", "dddot"),
  ..t2l("dot.quad", "ddddot"),
  ..t2l("excl", "mathexclam"),
  ..t2l("excl.double", "Exclam"),
  ..t2l("excl.inv", ""),
  ..t2l("excl.quest", ""),
  ..t2l("quest", "mathquestion"),
  ..t2l("quest.double", "Question"),
  ..t2l("quest.excl", ""),
  ..t2l("quest.inv", ""),
  ..t2l("interrobang", ""),
  ..t2l("hash", "mathoctothorpe"),
  ..t2l("hyph", "mathhyphen"),
  ..t2l("hyph.minus", ""),
  ..t2l("hyph.nobreak", ""),
  ..t2l("hyph.point", ""),
  ..t2l("hyph.soft", ""),
  ..t2l("percent", "mathpercent"),
  ..t2l("copyright", "copyright"),
  ..t2l("copyright.sound", ""),
  ..t2l("permille", "permil", latexpkg: "wasysym"),
  ..t2l("pilcrow", "mathparagraph"),
  ..t2l("pilcrow.rev", ""),
  ..t2l("section", "mathsection"),
  ..t2l("semi", "mathsemicolon"),
  ..t2l("semi.rev", ""),
  ..t2l("slash", "mathslash"),
  ..t2l("slash.double", "sslash"),
  ..t2l("slash.triple", "trslash"),
  ..t2l("slash.big", "xsol"),
  ..t2l("dots.h.c", "unicodecdots"),
  ..t2l("dots.h", "unicodeellipsis"),
  ..t2l("dots.v", "vdots"),
  ..t2l("dots.down", "ddots"),
  ..t2l("dots.up", "adots"),
  ..t2l("tilde.op", "sim"),
  ..t2l("tilde.basic", ""),
  ..t2l("tilde.dot", "dotsim"),
  ..t2l("tilde.eq", "sime"),
  ..t2l("tilde.eq.not", "nsimeq"),
  ..t2l("tilde.eq.rev", "backsimeq"),
  ..t2l("tilde.equiv", "cong"),
  ..t2l("tilde.equiv.not", "ncong"),
  ..t2l("tilde.nequiv", "simneqq"),
  ..t2l("tilde.not", "nsim"),
  ..t2l("tilde.rev", "backsim"),
  ..t2l("tilde.rev.equiv", "backcong"),
  ..t2l("tilde.triple", "approxident"),
  ..t2l("acute", "textasciiacute", latexpkg: "textcomp"),
  ..t2l("acute.double", "textacutedbl", latexpkg: "textcomp"),
  ..t2l("breve", "textasciibreve", latexpkg: "textcomp"),
  ..t2l("caret", "caretinsert"),
  ..t2l("caron", "textasciicaron", latexpkg: "textcomp"),
  ..t2l("hat", ""),
  ..t2l("diaer", "textasciidieresis", latexpkg: "textcomp"),
  ..t2l("grave", "textasciigrave", latexpkg: "textcomp"),
  ..t2l("macron", "textasciimacron", latexpkg: "textcomp"),
  ..t2l("quote.double", "textquotedbl"),
  ..t2l("quote.single", "textquotesingle", latexpkg: "textcomp"),
  ..t2l("quote.l.double", "textquotedblleft"),
  ..t2l("quote.l.single", "textquoteleft"),
  ..t2l("quote.r.double", "textquotedblright"),
  ..t2l("quote.r.single", "textquoteright"),
  ..t2l("quote.angle.l.double", "guillemetleft"),
  ..t2l("quote.angle.l.single", "guilsinglleft"),
  ..t2l("quote.angle.r.double", "guillemetright"),
  ..t2l("quote.angle.r.single", "guilsinglright"),
  ..t2l("quote.high.double", ""),
  ..t2l("quote.high.single", ""),
  ..t2l("quote.low.double", "quotedblbase"),
  ..t2l("quote.low.single", "quotesinglbase"),
  ..t2l("prime", "prime"),
  ..t2l("prime.rev", "backprime"),
  ..t2l("prime.double", "dprime"),
  ..t2l("prime.double.rev", "backdprime"),
  ..t2l("prime.triple", "trprime"),
  ..t2l("prime.triple.rev", "backtrprime"),
  ..t2l("prime.quad", "qprime"),
  ..t2l("plus", "mathplus"),
  ..t2l("plus.circle", "oplus"),
  ..t2l("plus.circle.arrow", "rightarrowonoplus"),
  ..t2l("plus.circle.big", "bigoplus"),
  ..t2l("plus.dot", "dotplus"),
  ..t2l("plus.minus", "pm"),
  ..t2l("plus.small", ""),
  ..t2l("plus.square", "boxplus"),
  ..t2l("plus.triangle", "triangleplus"),
  ..t2l("minus", "minus"),
  ..t2l("minus.circle", "ominus"),
  ..t2l("minus.dot", "dotminus"),
  ..t2l("minus.plus", "mp"),
  ..t2l("minus.square", "boxminus"),
  ..t2l("minus.tilde", "eqsim"),
  ..t2l("minus.triangle", "triangleminus"),
  ..t2l("div", "div"),
  ..t2l("div.circle", "odiv"),
  ..t2l("times", "times"),
  ..t2l("times.big", "bigtimes"),
  ..t2l("times.circle", "otimes"),
  ..t2l("times.circle.big", "bigotimes"),
  ..t2l("times.div", "divideontimes"),
  ..t2l("times.three.l", "leftthreetimes"),
  ..t2l("times.three.r", "rightthreetimes"),
  ..t2l("times.l", "ltimes"),
  ..t2l("times.r", "rtimes"),
  ..t2l("times.square", "boxtimes"),
  ..t2l("times.triangle", "triangletimes"),
  ..t2l("ratio", "mathratio"),
  ..t2l("eq", "equal"),
  ..t2l("eq.star", "stareq"),
  ..t2l("eq.circle", "circledequal"),
  ..t2l("eq.colon", "eqcolon"),
  ..t2l("eq.def", "eqdef"),
  ..t2l("eq.delta", "triangleq"),
  ..t2l("eq.equi", "veeeq"),
  ..t2l("eq.est", "wedgeq"),
  ..t2l("eq.gt", "eqgtr"),
  ..t2l("eq.lt", "eqless"),
  ..t2l("eq.m", "measeq"),
  ..t2l("eq.not", "ne"),
  ..t2l("eq.prec", "curlyeqprec"),
  ..t2l("eq.quest", "questeq"),
  ..t2l("eq.small", ""),
  ..t2l("eq.succ", "curlyeqsucc"),
  ..t2l("eq.triple", "equiv"),
  ..t2l("eq.quad", "Equiv"),
  ..t2l("gt", "greater"),
  ..t2l("gt.circle", "ogreaterthan"),
  ..t2l("gt.curly", "succ"),
  ..t2l("gt.curly.approx", "succapprox"),
  ..t2l("gt.curly.double", "Succ"),
  ..t2l("gt.curly.eq", "succcurlyeq"),
  ..t2l("gt.curly.eq.not", "nsucccurlyeq"),
  ..t2l("gt.curly.equiv", "succeqq"),
  ..t2l("gt.curly.napprox", "succnapprox"),
  ..t2l("gt.curly.nequiv", "succneqq"),
  ..t2l("gt.curly.not", "nsucc"),
  ..t2l("gt.curly.ntilde", "succnsim"),
  ..t2l("gt.curly.tilde", "succsim"),
  ..t2l("gt.dot", "gtrdot"),
  ..t2l("gt.approx", "gtrapprox"),
  ..t2l("gt.double", "gg"),
  ..t2l("gt.eq", "geq"),
  ..t2l("gt.eq.slant", "geqslant"),
  ..t2l("gt.eq.lt", "gtreqless"),
  ..t2l("gt.eq.not", "ngeq"),
  ..t2l("gt.equiv", "geqq"),
  ..t2l("gt.lt", "gtrless"),
  ..t2l("gt.lt.not", "ngtrless"),
  ..t2l("gt.napprox", "gnapprox"),
  ..t2l("gt.nequiv", "gneqq"),
  ..t2l("gt.not", "ngtr"),
  ..t2l("gt.ntilde", "gnsim"),
  ..t2l("gt.small", ""),
  ..t2l("gt.tilde", "gtrsim"),
  ..t2l("gt.tilde.not", "ngtrsim"),
  ..t2l("gt.tri", "vartriangleright"),
  ..t2l("gt.tri.eq", "trianglerighteq"),
  ..t2l("gt.tri.eq.not", "ntrianglerighteq"),
  ..t2l("gt.tri.not", "nvartriangleright"),
  ..t2l("gt.triple", "ggg"),
  ..t2l("gt.triple.nested", "gggnest"),
  ..t2l("lt", "less"),
  ..t2l("lt.circle", "olessthan"),
  ..t2l("lt.curly", "prec"),
  ..t2l("lt.curly.approx", "precapprox"),
  ..t2l("lt.curly.double", "Prec"),
  ..t2l("lt.curly.eq", "preccurlyeq"),
  ..t2l("lt.curly.eq.not", "npreccurlyeq"),
  ..t2l("lt.curly.equiv", "preceqq"),
  ..t2l("lt.curly.napprox", "precnapprox"),
  ..t2l("lt.curly.nequiv", "precneqq"),
  ..t2l("lt.curly.not", "nprec"),
  ..t2l("lt.curly.ntilde", "precnsim"),
  ..t2l("lt.curly.tilde", "precsim"),
  ..t2l("lt.dot", "lessdot"),
  ..t2l("lt.approx", "lessapprox"),
  ..t2l("lt.double", "ll"),
  ..t2l("lt.eq", "leq"),
  ..t2l("lt.eq.slant", "leqslant"),
  ..t2l("lt.eq.gt", "lesseqgtr"),
  ..t2l("lt.eq.not", "nleq"),
  ..t2l("lt.equiv", "leqq"),
  ..t2l("lt.gt", "lessgtr"),
  ..t2l("lt.gt.not", "nlessgtr"),
  ..t2l("lt.napprox", "lnapprox"),
  ..t2l("lt.nequiv", "lneqq"),
  ..t2l("lt.not", "nless"),
  ..t2l("lt.ntilde", "lnsim"),
  ..t2l("lt.small", ""),
  ..t2l("lt.tilde", "lesssim"),
  ..t2l("lt.tilde.not", "nlesssim"),
  ..t2l("lt.tri", "vartriangleleft"),
  ..t2l("lt.tri.eq", "trianglelefteq"),
  ..t2l("lt.tri.eq.not", "ntrianglelefteq"),
  ..t2l("lt.tri.not", "nvartriangleleft"),
  ..t2l("lt.triple", "lll"),
  ..t2l("lt.triple.nested", "lllnest"),
  ..t2l("approx", "approx"),
  ..t2l("approx.eq", "approxeq"),
  ..t2l("approx.not", "napprox"),
  ..t2l("prec", "prec"),
  ..t2l("prec.approx", "precapprox"),
  ..t2l("prec.double", "Prec"),
  ..t2l("prec.eq", "preccurlyeq"),
  ..t2l("prec.eq.not", "npreccurlyeq"),
  ..t2l("prec.equiv", "preceqq"),
  ..t2l("prec.napprox", "precnapprox"),
  ..t2l("prec.nequiv", "precneqq"),
  ..t2l("prec.not", "nprec"),
  ..t2l("prec.ntilde", "precnsim"),
  ..t2l("prec.tilde", "precsim"),
  ..t2l("succ", "succ"),
  ..t2l("succ.approx", "succapprox"),
  ..t2l("succ.double", "Succ"),
  ..t2l("succ.eq", "succcurlyeq"),
  ..t2l("succ.eq.not", "nsucccurlyeq"),
  ..t2l("succ.equiv", "succeqq"),
  ..t2l("succ.napprox", "succnapprox"),
  ..t2l("succ.nequiv", "succneqq"),
  ..t2l("succ.not", "nsucc"),
  ..t2l("succ.ntilde", "succnsim"),
  ..t2l("succ.tilde", "succsim"),
  ..t2l("equiv", "equiv"),
  ..t2l("equiv.not", "nequiv"),
  ..t2l("prop", "propto"),
  ..t2l("emptyset", "varnothing"),
  ..t2l("emptyset.rev", "revemptyset"),
  ..t2l("nothing", "varnothing"),
  ..t2l("nothing.rev", "revemptyset"),
  ..t2l("without", "setminus"),
  ..t2l("complement", "complement"),
  ..t2l("in", "in"),
  ..t2l("in.not", "notin"),
  ..t2l("in.rev", "ni"),
  ..t2l("in.rev.not", "nni"),
  ..t2l("in.rev.small", "smallni"),
  ..t2l("in.small", "smallin"),
  ..t2l("subset", "subset"),
  ..t2l("subset.dot", "subsetdot"),
  ..t2l("subset.double", "Subset"),
  ..t2l("subset.eq", "subseteq"),
  ..t2l("subset.eq.not", "nsubseteq"),
  ..t2l("subset.eq.sq", "sqsubseteq"),
  ..t2l("subset.eq.sq.not", "nsqsubseteq"),
  ..t2l("subset.neq", "subsetneq"),
  ..t2l("subset.not", "nsubset"),
  ..t2l("subset.sq", "sqsubset"),
  ..t2l("subset.sq.neq", "sqsubsetneq"),
  ..t2l("supset", "supset"),
  ..t2l("supset.dot", "supsetdot"),
  ..t2l("supset.double", "Supset"),
  ..t2l("supset.eq", "supseteq"),
  ..t2l("supset.eq.not", "nsupseteq"),
  ..t2l("supset.eq.sq", "sqsupseteq"),
  ..t2l("supset.eq.sq.not", "nsqsupseteq"),
  ..t2l("supset.neq", "supsetneq"),
  ..t2l("supset.not", "nsupset"),
  ..t2l("supset.sq", "sqsupset"),
  ..t2l("supset.sq.neq", "sqsupsetneq"),
  ..t2l("union", "cup"),
  ..t2l("union.arrow", "cupleftarrow"),
  ..t2l("union.big", "bigcup"),
  ..t2l("union.dot", "cupdot"),
  ..t2l("union.dot.big", "bigcupdot"),
  ..t2l("union.double", "Cup"),
  ..t2l("union.minus", "uminus"),
  ..t2l("union.or", "cupvee"),
  ..t2l("union.plus", "uplus"),
  ..t2l("union.plus.big", "biguplus"),
  ..t2l("union.sq", "sqcup"),
  ..t2l("union.sq.big", "bigsqcup"),
  ..t2l("union.sq.double", "Sqcup"),
  ..t2l("sect", "cap"),
  ..t2l("sect.and", "capwedge"),
  ..t2l("sect.big", "bigcap"),
  ..t2l("sect.dot", "capdot"),
  ..t2l("sect.double", "Cap"),
  ..t2l("sect.sq", "sqcap"),
  ..t2l("sect.sq.big", "bigsqcap"),
  ..t2l("sect.sq.double", "Sqcap"),
  ..t2l("infinity", "infty"),
  ..t2l("oo", "infty"),
  ..t2l("diff", "partial"),
  ..t2l("partial", "partial"),
  ..t2l("gradient", "nabla"),
  ..t2l("nabla", "nabla"),
  ..t2l("sum", "sum"),
  ..t2l("sum.integral", "sumint"),
  ..t2l("product", "prod"),
  ..t2l("product.co", "coprod"),
  ..t2l("integral", "int"),
  ..t2l("integral.arrow.hook", "intlarhk"),
  ..t2l("integral.ccw", "awint"),
  ..t2l("integral.cont", "oint"),
  ..t2l("integral.cont.ccw", "ointctrclockwise"),
  ..t2l("integral.cont.cw", "varointclockwise"),
  ..t2l("integral.cw", "intclockwise"),
  ..t2l("integral.dash", "intbar"),
  ..t2l("integral.dash.double", "intBar"),
  ..t2l("integral.double", "iint"),
  ..t2l("integral.quad", "iiiint"),
  ..t2l("integral.sect", "intcap"),
  ..t2l("integral.slash", "fint"),
  ..t2l("integral.square", "sqint"),
  ..t2l("integral.surf", "oiint"),
  ..t2l("integral.times", "intx"),
  ..t2l("integral.triple", "iiint"),
  ..t2l("integral.union", "intcup"),
  ..t2l("integral.vol", "oiiint"),
  ..t2l("laplace", "increment"),
  ..t2l("forall", "forall"),
  ..t2l("exists", "exists"),
  ..t2l("exists.not", "nexists"),
  ..t2l("top", "top"),
  ..t2l("bot", "bot"),
  ..t2l("not", "neg"),
  ..t2l("and", "wedge"),
  ..t2l("and.big", "bigwedge"),
  ..t2l("and.curly", "curlywedge"),
  ..t2l("and.dot", "wedgedot"),
  ..t2l("and.double", "Wedge"),
  ..t2l("or", "vee"),
  ..t2l("or.big", "bigvee"),
  ..t2l("or.curly", "curlyvee"),
  ..t2l("or.dot", "veedot"),
  ..t2l("or.double", "Vee"),
  ..t2l("xor", "oplus"),
  ..t2l("xor.big", "bigoplus"),
  ..t2l("models", "models"),
  ..t2l("forces", "Vdash"),
  ..t2l("forces.not", "nVdash"),
  ..t2l("therefore", "therefore"),
  ..t2l("because", "because"),
  ..t2l("qed", "QED"),
  ..t2l("compose", "vysmwhtcircle"),
  ..t2l("convolve", "ast"),
  ..t2l("multimap", "multimap"),
  ..t2l("divides", "mid"),
  ..t2l("divides.not", "nmid"),
  ..t2l("wreath", "wr"),
  ..t2l("parallel", "parallel"),
  ..t2l("parallel.circle", "circledparallel"),
  ..t2l("parallel.not", "nparallel"),
  ..t2l("perp", "perp"),
  ..t2l("perp.circle", "operp"),
  ..t2l("diameter", "diameter"),
  ..t2l("join", "Join"),
  ..t2l("join.r", "rightouterjoin"),
  ..t2l("join.l", "leftouterjoin"),
  ..t2l("join.l.r", "fullouterjoin"),
  ..t2l("degree", "degree", latexpkg: "gensymb"),
  ..t2l("degree.c", "celsius", latexpkg: "gensymb"),
  ..t2l("degree.f", ""),
  ..t2l("smash", "smashtimes"),
  ..t2l("bitcoin", "faBtc", latexpkg: "fontawesome"),
  ..t2l("dollar", "mathdollar"),
  ..t2l("euro", "euro"),
  ..t2l("franc", ""),
  ..t2l("lira", "textlira"),
  ..t2l("peso", "textpeso"),
  ..t2l("pound", "pounds"),
  ..t2l("ruble", "faRub", latexpkg: "fontawesome"),
  ..t2l("rupee", "rupee", latexpkg: "tfrupee"),
  ..t2l("won", "textwon"),
  ..t2l("yen", "textyen"),
  ..t2l("ballot", ""),
  ..t2l("ballot.x", ""),
  ..t2l("checkmark", "checkmark"),
  ..t2l("checkmark.light", ""),
  ..t2l("floral", ""),
  ..t2l("floral.l", ""),
  ..t2l("floral.r", ""),
  ..t2l("notes.up", ""),
  ..t2l("notes.down", ""),
  ..t2l("refmark", ""),
  ..t2l("servicemark", ""),
  ..t2l("maltese", "maltese"),
  ..t2l("suit.club", "clubsuit"),
  ..t2l("suit.diamond", "vardiamondsuit"),
  ..t2l("suit.heart", "varheartsuit"),
  ..t2l("suit.spade", "spadesuit"),
  ..t2l("bullet", "smblkcircle"),
  ..t2l("circle.stroked", "mdlgwhtcircle"),
  ..t2l("circle.stroked.tiny", "vysmwhtcircle"),
  ..t2l("circle.stroked.small", "mdsmwhtcircle"),
  ..t2l("circle.stroked.big", "lgwhtcircle"),
  ..t2l("circle.filled", "mdlgblkcircle"),
  ..t2l("circle.filled.tiny", "mdsmblkcircle"),
  ..t2l("circle.filled.small", "vysmblkcircle"),
  ..t2l("circle.filled.big", "lgblkcircle"),
  ..t2l("circle.dotted", "dottedcircle"),
  ..t2l("circle.nested", "circledcirc"),
  ..t2l("ellipse.stroked.h", "whthorzoval"),
  ..t2l("ellipse.stroked.v", "whtvertoval"),
  ..t2l("ellipse.filled.h", "blkhorzoval"),
  ..t2l("ellipse.filled.v", "blkvertoval"),
  ..t2l("triangle.stroked.r", "triangleright"),
  ..t2l("triangle.stroked.l", "triangleleft"),
  ..t2l("triangle.stroked.t", "bigtriangleup"),
  ..t2l("triangle.stroked.b", "bigtriangledown"),
  ..t2l("triangle.stroked.bl", "lltriangle"),
  ..t2l("triangle.stroked.br", "lrtriangle"),
  ..t2l("triangle.stroked.tl", "ultriangle"),
  ..t2l("triangle.stroked.tr", "urtriangle"),
  ..t2l("triangle.stroked.small.r", "smalltriangleright"),
  ..t2l("triangle.stroked.small.b", "triangledown"),
  ..t2l("triangle.stroked.small.l", "smalltriangleleft"),
  ..t2l("triangle.stroked.small.t", "vartriangle"),
  ..t2l("triangle.stroked.rounded", ""),
  ..t2l("triangle.stroked.nested", "whiteinwhitetriangle"),
  ..t2l("triangle.stroked.dot", "trianglecdot"),
  ..t2l("triangle.filled.r", "blacktriangleright"),
  ..t2l("triangle.filled.l", "blacktriangleleft"),
  ..t2l("triangle.filled.t", "bigblacktriangleup"),
  ..t2l("triangle.filled.b", "bigblacktriangledown"),
  ..t2l("triangle.filled.bl", "llblacktriangle"),
  ..t2l("triangle.filled.br", "lrblacktriangle"),
  ..t2l("triangle.filled.tl", "ulblacktriangle"),
  ..t2l("triangle.filled.tr", "urblacktriangle"),
  ..t2l("triangle.filled.small.r", "smallblacktriangleright"),
  ..t2l("triangle.filled.small.b", "blacktriangledown"),
  ..t2l("triangle.filled.small.l", "smallblacktriangleleft"),
  ..t2l("triangle.filled.small.t", "blacktriangle"),
  ..t2l("square.stroked", "mdlgwhtsquare"),
  ..t2l("square.stroked.tiny", "smwhtsquare"),
  ..t2l("square.stroked.small", "mdsmwhtsquare"),
  ..t2l("square.stroked.medium", "mdwhtsquare"),
  ..t2l("square.stroked.big", "lgwhtsquare"),
  ..t2l("square.stroked.dotted", "dottedsquare"),
  ..t2l("square.stroked.rounded", "squoval"),
  ..t2l("square.filled", "mdlgblksquare"),
  ..t2l("square.filled.tiny", "smblksquare"),
  ..t2l("square.filled.small", "mdsmblksquare"),
  ..t2l("square.filled.medium", "mdblksquare"),
  ..t2l("square.filled.big", "lgblksquare"),
  ..t2l("rect.stroked.h", "hrectangle"),
  ..t2l("rect.stroked.v", "vrectangle"),
  ..t2l("rect.filled.h", "hrectangleblack"),
  ..t2l("rect.filled.v", "vrectangleblack"),
  ..t2l("penta.stroked", "pentagon"),
  ..t2l("penta.filled", "pentagonblack"),
  ..t2l("hexa.stroked", "varhexagon"),
  ..t2l("hexa.filled", "varhexagonblack"),
  ..t2l("diamond.stroked", "mdlgwhtdiamond"),
  ..t2l("diamond.stroked.small", "smwhtdiamond"),
  ..t2l("diamond.stroked.medium", "mdwhtdiamond"),
  ..t2l("diamond.stroked.dot", "diamondcdot"),
  ..t2l("diamond.filled", "mdlgblkdiamond"),
  ..t2l("diamond.filled.medium", "mdblkdiamond"),
  ..t2l("diamond.filled.small", "smblkdiamond"),
  ..t2l("lozenge.stroked", "mdlgwhtlozenge"),
  ..t2l("lozenge.stroked.small", "smwhtlozenge"),
  ..t2l("lozenge.stroked.medium", "mdwhtlozenge"),
  ..t2l("lozenge.filled", "mdlgblklozenge"),
  ..t2l("lozenge.filled.small", "smblklozenge"),
  ..t2l("lozenge.filled.medium", "mdblklozenge"),
  ..t2l("star.op", "star"),
  ..t2l("star.stroked", "bigwhitestar"),
  ..t2l("star.filled", "bigstar"),
  ..t2l("arrow.r", "rightarrow"),
  ..t2l("arrow.r.long.bar", "longmapsto"),
  ..t2l("arrow.r.bar", "mapsto"),
  ..t2l("arrow.r.curve", "rightdowncurvedarrow"),
  ..t2l("arrow.r.dashed", "rightdasharrow"),
  ..t2l("arrow.r.dotted", "rightdotarrow"),
  ..t2l("arrow.r.double", "Rightarrow"),
  ..t2l("arrow.r.double.bar", "Mapsto"),
  ..t2l("arrow.r.double.long", "Longrightarrow"),
  ..t2l("arrow.r.double.long.bar", "Longmapsto"),
  ..t2l("arrow.r.double.not", "nRightarrow"),
  ..t2l("arrow.r.filled", "rightblackarrow", latexpkg: "boisik"),
  ..t2l("arrow.r.hook", "hookrightarrow"),
  ..t2l("arrow.r.long", "longrightarrow"),
  ..t2l("arrow.r.long.squiggly", "longrightsquigarrow"),
  ..t2l("arrow.r.loop", "looparrowright"),
  ..t2l("arrow.r.not", "nrightarrow"),
  ..t2l("arrow.r.quad", "RRightarrow"),
  ..t2l("arrow.r.squiggly", "rightsquigarrow"),
  ..t2l("arrow.r.stop", "rightarrowbar"),
  ..t2l("arrow.r.stroked", "rightwhitearrow"),
  ..t2l("arrow.r.tail", "rightarrowtail"),
  ..t2l("arrow.r.tilde", "similarrightarrow"),
  ..t2l("arrow.r.triple", "Rrightarrow"),
  ..t2l("arrow.r.twohead.bar", "twoheadmapsto"),
  ..t2l("arrow.r.twohead", "twoheadrightarrow"),
  ..t2l("arrow.r.wave", "rightwavearrow"),
  ..t2l("arrow.l", "leftarrow"),
  ..t2l("arrow.l.bar", "mapsfrom"),
  ..t2l("arrow.l.curve", "leftdowncurvedarrow"),
  ..t2l("arrow.l.dashed", "leftdasharrow"),
  ..t2l("arrow.l.dotted", "leftdotarrow"),
  ..t2l("arrow.l.double", "Leftarrow"),
  ..t2l("arrow.l.double.bar", "Mapsfrom"),
  ..t2l("arrow.l.double.long", "Longleftarrow"),
  ..t2l("arrow.l.double.long.bar", "Longmapsfrom"),
  ..t2l("arrow.l.double.not", "nLeftarrow"),
  ..t2l("arrow.l.filled", "leftblackarrow", latexpkg: "boisik"),
  ..t2l("arrow.l.hook", "hookleftarrow"),
  ..t2l("arrow.l.long", "longleftarrow"),
  ..t2l("arrow.l.long.bar", "longmapsfrom"),
  ..t2l("arrow.l.long.squiggly", "longleftsquigarrow"),
  ..t2l("arrow.l.loop", "looparrowleft"),
  ..t2l("arrow.l.not", "nleftarrow"),
  ..t2l("arrow.l.quad", "LLeftarrow"),
  ..t2l("arrow.l.squiggly", "leftsquigarrow"),
  ..t2l("arrow.l.stop", "barleftarrow"),
  ..t2l("arrow.l.stroked", "leftwhitearrow"),
  ..t2l("arrow.l.tail", "leftarrowtail"),
  ..t2l("arrow.l.tilde", "similarleftarrow"),
  ..t2l("arrow.l.triple", "Lleftarrow"),
  ..t2l("arrow.l.twohead.bar", "twoheadmapsfrom"),
  ..t2l("arrow.l.twohead", "twoheadleftarrow"),
  ..t2l("arrow.l.wave", "leftwavearrow"),
  ..t2l("arrow.t", "uparrow"),
  ..t2l("arrow.t.bar", "mapsup"),
  ..t2l("arrow.t.curve", "uprightcurvearrow"),
  ..t2l("arrow.t.dashed", "updasharrow"),
  ..t2l("arrow.t.double", "Uparrow"),
  ..t2l("arrow.t.filled", "upblackarrow", latexpkg: "boisik"),
  ..t2l("arrow.t.quad", "UUparrow"),
  ..t2l("arrow.t.stop", "baruparrow"),
  ..t2l("arrow.t.stroked", "upwhitearrow"),
  ..t2l("arrow.t.triple", "Uuparrow"),
  ..t2l("arrow.t.twohead", "twoheaduparrow"),
  ..t2l("arrow.b", "downarrow"),
  ..t2l("arrow.b.bar", "mapsdown"),
  ..t2l("arrow.b.curve", "downrightcurvedarrow"),
  ..t2l("arrow.b.dashed", "downdasharrow"),
  ..t2l("arrow.b.double", "Downarrow"),
  ..t2l("arrow.b.filled", "downblackarrow", latexpkg: "boisik"),
  ..t2l("arrow.b.quad", "DDownarrow"),
  ..t2l("arrow.b.stop", "downarrowbar"),
  ..t2l("arrow.b.stroked", "downwhitearrow"),
  ..t2l("arrow.b.triple", "Ddownarrow"),
  ..t2l("arrow.b.twohead", "twoheaddownarrow"),
  ..t2l("arrow.l.r", "leftrightarrow"),
  ..t2l("arrow.l.r.double", "Leftrightarrow"),
  ..t2l("arrow.l.r.double.long", "Longleftrightarrow"),
  ..t2l("arrow.l.r.double.not", "nLeftrightarrow"),
  ..t2l("arrow.l.r.filled", "leftrightblackarrow", latexpkg: "boisik"),
  ..t2l("arrow.l.r.long", "longleftrightarrow"),
  ..t2l("arrow.l.r.not", "nleftrightarrow"),
  ..t2l("arrow.l.r.stroked", ""),
  ..t2l("arrow.l.r.wave", "leftrightsquigarrow"),
  ..t2l("arrow.t.b", "updownarrow"),
  ..t2l("arrow.t.b.double", "Updownarrow"),
  ..t2l("arrow.t.b.filled", "updownblackarrow", latexpkg: "boisik"),
  ..t2l("arrow.t.b.stroked", ""),
  ..t2l("arrow.tr", "nearrow"),
  ..t2l("arrow.tr.double", "Nearrow"),
  ..t2l("arrow.tr.filled", ""),
  ..t2l("arrow.tr.hook", "hknearrow"),
  ..t2l("arrow.tr.stroked", ""),
  ..t2l("arrow.br", "searrow"),
  ..t2l("arrow.br.double", "Searrow"),
  ..t2l("arrow.br.filled", ""),
  ..t2l("arrow.br.hook", "hksearrow"),
  ..t2l("arrow.br.stroked", ""),
  ..t2l("arrow.tl", "nwarrow"),
  ..t2l("arrow.tl.double", "Nwarrow"),
  ..t2l("arrow.tl.filled", ""),
  ..t2l("arrow.tl.hook", "hknwarrow"),
  ..t2l("arrow.tl.stroked", ""),
  ..t2l("arrow.bl", "swarrow"),
  ..t2l("arrow.bl.double", "Swarrow"),
  ..t2l("arrow.bl.filled", ""),
  ..t2l("arrow.bl.hook", "hkswarrow"),
  ..t2l("arrow.bl.stroked", ""),
  ..t2l("arrow.tl.br", "nwsearrow"),
  ..t2l("arrow.tr.bl", "neswarrow"),
  ..t2l("arrow.ccw", "acwopencirclearrow"),
  ..t2l("arrow.ccw.half", "curvearrowleft"),
  ..t2l("arrow.cw", "cwopencirclearrow"),
  ..t2l("arrow.cw.half", "curvearrowright"),
  ..t2l("arrow.zigzag", "downzigzagarrow"),
  ..t2l("arrows.rr", "rightrightarrows"),
  ..t2l("arrows.ll", "leftleftarrows"),
  ..t2l("arrows.tt", "upuparrows"),
  ..t2l("arrows.bb", "downdownarrows"),
  ..t2l("arrows.lr", "leftrightarrows"),
  ..t2l("arrows.lr.stop", "barleftarrowrightarrowbar"),
  ..t2l("arrows.rl", "rightleftarrows"),
  ..t2l("arrows.tb", "updownarrows"),
  ..t2l("arrows.bt", "downuparrows"),
  ..t2l("arrows.rrr", "rightthreearrows"),
  ..t2l("arrows.lll", "leftthreearrows"),
  ..t2l("arrowhead.t", ""),
  ..t2l("arrowhead.b", ""),
  ..t2l("harpoon.rt", "rightharpoonup"),
  ..t2l("harpoon.rt.bar", "barrightharpoonup"),
  ..t2l("harpoon.rt.stop", "rightharpoonupbar"),
  ..t2l("harpoon.rb", "rightharpoondown"),
  ..t2l("harpoon.rb.bar", "barrightharpoondown"),
  ..t2l("harpoon.rb.stop", "rightharpoondownbar"),
  ..t2l("harpoon.lt", "leftharpoonup"),
  ..t2l("harpoon.lt.bar", "leftharpoonupbar"),
  ..t2l("harpoon.lt.stop", "barleftharpoonup"),
  ..t2l("harpoon.lb", "leftharpoondown"),
  ..t2l("harpoon.lb.bar", "leftharpoondownbar"),
  ..t2l("harpoon.lb.stop", "barleftharpoondown"),
  ..t2l("harpoon.tl", "upharpoonleft"),
  ..t2l("harpoon.tl.bar", "upharpoonleftbar"),
  ..t2l("harpoon.tl.stop", "barupharpoonleft"),
  ..t2l("harpoon.tr", "upharpoonright"),
  ..t2l("harpoon.tr.bar", "upharpoonrightbar"),
  ..t2l("harpoon.tr.stop", "barupharpoonright"),
  ..t2l("harpoon.bl", "downharpoonleft"),
  ..t2l("harpoon.bl.bar", "bardownharpoonleft"),
  ..t2l("harpoon.bl.stop", "downharpoonleftbar"),
  ..t2l("harpoon.br", "downharpoonright"),
  ..t2l("harpoon.br.bar", "bardownharpoonright"),
  ..t2l("harpoon.br.stop", "downharpoonrightbar"),
  ..t2l("harpoon.lt.rt", "leftrightharpoonupup"),
  ..t2l("harpoon.lb.rb", "leftrightharpoondowndown"),
  ..t2l("harpoon.lb.rt", "leftrightharpoondownup"),
  ..t2l("harpoon.lt.rb", "leftrightharpoonupdown"),
  ..t2l("harpoon.tl.bl", "updownharpoonleftleft"),
  ..t2l("harpoon.tr.br", "updownharpoonrightright"),
  ..t2l("harpoon.tl.br", "updownharpoonleftright"),
  ..t2l("harpoon.tr.bl", "updownharpoonrightleft"),
  ..t2l("harpoons.rtrb", "rightharpoonsupdown"),
  ..t2l("harpoons.blbr", "downharpoonsleftright"),
  ..t2l("harpoons.bltr", "downupharpoonsleftright"),
  ..t2l("harpoons.lbrb", "leftrightharpoonsdown"),
  ..t2l("harpoons.ltlb", "leftharpoonsupdown"),
  ..t2l("harpoons.ltrb", "leftrightharpoons"),
  ..t2l("harpoons.ltrt", "leftrightharpoonsup"),
  ..t2l("harpoons.rblb", "rightleftharpoonsdown"),
  ..t2l("harpoons.rtlb", "rightleftharpoons"),
  ..t2l("harpoons.rtlt", "rightleftharpoonsup"),
  ..t2l("harpoons.tlbr", "updownharpoonsleftright"),
  ..t2l("harpoons.tltr", "upharpoonsleftright"),
  ..t2l("tack.r", "vdash"),
  ..t2l("tack.r.not", "nvdash"),
  ..t2l("tack.r.long", "vlongdash"),
  ..t2l("tack.r.short", "assert"),
  ..t2l("tack.r.double", "vDash"),
  ..t2l("tack.r.double.not", "nvDash"),
  ..t2l("tack.l", "dashv"),
  ..t2l("tack.l.long", "longdashv"),
  ..t2l("tack.l.short", "shortlefttack"),
  ..t2l("tack.l.double", "Dashv"),
  ..t2l("tack.t", "bot"),
  ..t2l("tack.t.big", "bigbot"),
  ..t2l("tack.t.double", "Vbar"),
  ..t2l("tack.t.short", "shortuptack"),
  ..t2l("tack.b", "top"),
  ..t2l("tack.b.big", "bigtop"),
  ..t2l("tack.b.double", "barV"),
  ..t2l("tack.b.short", "shortdowntack"),
  ..t2l("tack.l.r", "dashVdash"),
  ..t2l("alpha", "mupalpha"),
  ..t2l("beta", "mupbeta"),
  ..t2l("beta.alt", ""),
  ..t2l("chi", "mupchi"),
  ..t2l("delta", "mupdelta"),
  ..t2l("epsilon", "mupvarepsilon"),
  ..t2l("epsilon.alt", "mupepsilon"),
  ..t2l("eta", "mupeta"),
  ..t2l("gamma", "mupgamma"),
  ..t2l("iota", "mupiota"),
  ..t2l("kai", ""),
  ..t2l("kappa", "mupkappa"),
  ..t2l("kappa.alt", "mupvarkappa"),
  ..t2l("lambda", "muplambda"),
  ..t2l("mu", "mupmu"),
  ..t2l("nu", "mupnu"),
  ..t2l("ohm", "ohm", latexpkg: "gensymb"),
  ..t2l("ohm.inv", "mho"),
  ..t2l("omega", "mupomega"),
  ..t2l("omicron", "mupomicron"),
  ..t2l("phi", "mupvarphi"),
  ..t2l("phi.alt", "mupphi"),
  ..t2l("pi", "muppi"),
  ..t2l("pi.alt", "mupvarpi"),
  ..t2l("psi", "muppsi"),
  ..t2l("rho", "muprho"),
  ..t2l("rho.alt", "mupvarrho"),
  ..t2l("sigma", "mupsigma"),
  ..t2l("sigma.alt", "mupvarsigma"),
  ..t2l("tau", "muptau"),
  ..t2l("theta", "muptheta"),
  ..t2l("theta.alt", "mupvartheta"),
  ..t2l("upsilon", "mupupsilon"),
  ..t2l("xi", "mupxi"),
  ..t2l("zeta", "mupzeta"),
  ..t2l("Alpha", "mupAlpha"),
  ..t2l("Beta", "mupBeta"),
  ..t2l("Chi", "mupChi"),
  ..t2l("Delta", "mupDelta"),
  ..t2l("Epsilon", "mupEpsilon"),
  ..t2l("Eta", "mupEta"),
  ..t2l("Gamma", "mupGamma"),
  ..t2l("Iota", "mupIota"),
  ..t2l("Kai", ""),
  ..t2l("Kappa", "mupKappa"),
  ..t2l("Lambda", "mupLambda"),
  ..t2l("Mu", "mupMu"),
  ..t2l("Nu", "mupNu"),
  ..t2l("Omega", "mupOmega"),
  ..t2l("Omicron", "mupOmicron"),
  ..t2l("Phi", "mupPhi"),
  ..t2l("Pi", "mupPi"),
  ..t2l("Psi", "mupPsi"),
  ..t2l("Rho", "mupRho"),
  ..t2l("Sigma", "mupSigma"),
  ..t2l("Tau", "mupTau"),
  ..t2l("Theta", "mupTheta"),
  ..t2l("Upsilon", "mupUpsilon"),
  ..t2l("Xi", "mupXi"),
  ..t2l("Zeta", "mupZeta"),
  ..t2l("aleph", "aleph", latexpkg: "MnSymbol"),
  ..t2l("alef", "aleph", latexpkg: "MnSymbol"),
  ..t2l("beth", "beth", latexpkg: "MnSymbol"),
  ..t2l("bet", "beth", latexpkg: "MnSymbol"),
  ..t2l("gimmel", "gimmel", latexpkg: "MnSymbol"),
  ..t2l("gimel", "gimmel", latexpkg: "MnSymbol"),
  ..t2l("daleth", "daleth", latexpkg: "MnSymbol"),
  ..t2l("dalet", "daleth", latexpkg: "MnSymbol"),
  ..t2l("shin", ""),
  ..t2l("AA", "BbbA"),
  ..t2l("BB", "BbbB"),
  ..t2l("CC", "BbbC"),
  ..t2l("DD", "BbbD"),
  ..t2l("EE", "BbbE"),
  ..t2l("FF", "BbbF"),
  ..t2l("GG", "BbbG"),
  ..t2l("HH", "BbbH"),
  ..t2l("II", "BbbI"),
  ..t2l("JJ", "BbbJ"),
  ..t2l("KK", "BbbK"),
  ..t2l("LL", "BbbL"),
  ..t2l("MM", "BbbM"),
  ..t2l("NN", "BbbN"),
  ..t2l("OO", "BbbO"),
  ..t2l("PP", "BbbP"),
  ..t2l("QQ", "BbbQ"),
  ..t2l("RR", "BbbR"),
  ..t2l("SS", "BbbS"),
  ..t2l("TT", "BbbT"),
  ..t2l("UU", "BbbU"),
  ..t2l("VV", "BbbV"),
  ..t2l("WW", "BbbW"),
  ..t2l("XX", "BbbX"),
  ..t2l("YY", "BbbY"),
  ..t2l("ZZ", "BbbZ"),
  ..t2l("ell", "ell"),
  ..t2l("planck", "Planckconst"),
  ..t2l("planck.reduce", "hslash"),
  ..t2l("angstrom", "Angstrom"),
  ..t2l("kelvin", ""),
  ..t2l("Re", "Re"),
  ..t2l("Im", "Im"),
  ..t2l("dotless.i", "imath"),
  ..t2l("dotless.j", "jmath"),
)